/* USER CODE BEGIN Includes */
//#include "main.h"
#include "MCP4921.h"
#include "stm32f3xx_hal.h"
#include "sinewave.h"
//#include "Mikro_e_4_LCD.h"
/* USER CODE END Includes */
/* USER CODE BEGIN 0 */ 

//extern unsigned char frequency = 1;
uint16_t phase_add = 0; //1000 * PHASE_PRECISION / SAMPLE_RATE_DAC;
//uint16_t amplitude = 1;
//extern unsigned char amplitude = 1;

unsigned int Sine_index = 0;
             
 //const unsigned int SINE_TABLE[1759] = {
/*0x8000,0x8075,0x80ea,0x815f,0x81d4,0x8249,0x82be,0x8333,
0x83a8,0x841d,0x8492,0x8507,0x857c,0x85f1,0x8666,0x86db,
0x8750,0x87c5,0x883a,0x88af,0x8924,0x8999,0x8a0d,0x8a82,
0x8af7,0x8b6b,0x8be0,0x8c55,0x8cc9,0x8d3e,0x8db2,0x8e27,
0x8e9b,0x8f0f,0x8f84,0x8ff8,0x906c,0x90e0,0x9154,0x91c8,
0x923c,0x92b0,0x9324,0x9398,0x940b,0x947f,0x94f2,0x9566,
0x95d9,0x964d,0x96c0,0x9733,0x97a6,0x9819,0x988c,0x98ff,
0x9972,0x99e5,0x9a57,0x9aca,0x9b3d,0x9baf,0x9c21,0x9c93,
0x9d06,0x9d78,0x9de9,0x9e5b,0x9ecd,0x9f3f,0x9fb0,0xa022,
0xa093,0xa104,0xa175,0xa1e6,0xa257,0xa2c8,0xa338,0xa3a9,
0xa419,0xa48a,0xa4fa,0xa56a,0xa5da,0xa64a,0xa6b9,0xa729,
0xa798,0xa808,0xa877,0xa8e6,0xa955,0xa9c4,0xaa32,0xaaa1,
0xab0f,0xab7d,0xabeb,0xac59,0xacc7,0xad35,0xada2,0xae10,
0xae7d,0xaeea,0xaf57,0xafc3,0xb030,0xb09c,0xb109,0xb175,
0xb1e1,0xb24c,0xb2b8,0xb323,0xb38f,0xb3fa,0xb465,0xb4d0,
0xb53a,0xb5a5,0xb60f,0xb679,0xb6e3,0xb74c,0xb7b6,0xb81f,
0xb888,0xb8f1,0xb95a,0xb9c3,0xba2b,0xba94,0xbafc,0xbb63,
0xbbcb,0xbc32,0xbc9a,0xbd01,0xbd68,0xbdce,0xbe35,0xbe9b,
0xbf01,0xbf67,0xbfcd,0xc032,0xc097,0xc0fc,0xc161,0xc1c6,
0xc22a,0xc28e,0xc2f2,0xc356,0xc3b9,0xc41c,0xc47f,0xc4e2,
0xc545,0xc5a7,0xc609,0xc66b,0xc6cd,0xc72e,0xc790,0xc7f1,
0xc851,0xc8b2,0xc912,0xc972,0xc9d2,0xca32,0xca91,0xcaf0,
0xcb4f,0xcbad,0xcc0c,0xcc6a,0xccc8,0xcd25,0xcd82,0xcddf,
0xce3c,0xce99,0xcef5,0xcf51,0xcfad,0xd009,0xd064,0xd0bf,
0xd11a,0xd174,0xd1ce,0xd228,0xd282,0xd2db,0xd334,0xd38d,
0xd3e6,0xd43e,0xd496,0xd4ee,0xd545,0xd59d,0xd5f3,0xd64a,
0xd6a0,0xd6f7,0xd74c,0xd7a2,0xd7f7,0xd84c,0xd8a1,0xd8f5,
0xd949,0xd99d,0xd9f0,0xda43,0xda96,0xdae9,0xdb3b,0xdb8d,
0xdbdf,0xdc30,0xdc81,0xdcd2,0xdd23,0xdd73,0xddc3,0xde12,
0xde62,0xdeb0,0xdeff,0xdf4d,0xdf9b,0xdfe9,0xe037,0xe084,
0xe0d0,0xe11d,0xe169,0xe1b5,0xe200,0xe24b,0xe296,0xe2e1,
0xe32b,0xe375,0xe3be,0xe408,0xe451,0xe499,0xe4e1,0xe529,
0xe571,0xe5b8,0xe5ff,0xe646,0xe68c,0xe6d2,0xe717,0xe75d,
0xe7a2,0xe7e6,0xe82a,0xe86e,0xe8b2,0xe8f5,0xe938,0xe97a,
0xe9bd,0xe9fe,0xea40,0xea81,0xeac2,0xeb02,0xeb42,0xeb82,
0xebc1,0xec00,0xec3f,0xec7d,0xecbb,0xecf9,0xed36,0xed73,
0xedb0,0xedec,0xee28,0xee63,0xee9e,0xeed9,0xef13,0xef4d,
0xef87,0xefc0,0xeff9,0xf032,0xf06a,0xf0a2,0xf0d9,0xf110,
0xf147,0xf17d,0xf1b3,0xf1e9,0xf21e,0xf253,0xf287,0xf2bc,
0xf2ef,0xf323,0xf356,0xf388,0xf3ba,0xf3ec,0xf41e,0xf44f,
0xf480,0xf4b0,0xf4e0,0xf50f,0xf53f,0xf56d,0xf59c,0xf5ca,
0xf5f7,0xf625,0xf652,0xf67e,0xf6aa,0xf6d6,0xf701,0xf72c,
0xf757,0xf781,0xf7aa,0xf7d4,0xf7fd,0xf825,0xf84e,0xf875,
0xf89d,0xf8c4,0xf8ea,0xf911,0xf936,0xf95c,0xf981,0xf9a5,
0xf9ca,0xf9ee,0xfa11,0xfa34,0xfa57,0xfa79,0xfa9b,0xfabc,
0xfadd,0xfafe,0xfb1e,0xfb3e,0xfb5d,0xfb7c,0xfb9b,0xfbb9,
0xfbd7,0xfbf4,0xfc11,0xfc2e,0xfc4a,0xfc66,0xfc81,0xfc9c,
0xfcb7,0xfcd1,0xfceb,0xfd04,0xfd1d,0xfd35,0xfd4d,0xfd65,
0xfd7c,0xfd93,0xfdaa,0xfdc0,0xfdd5,0xfdeb,0xfe00,0xfe14,
0xfe28,0xfe3c,0xfe4f,0xfe61,0xfe74,0xfe86,0xfe97,0xfea8,
0xfeb9,0xfec9,0xfed9,0xfee9,0xfef8,0xff06,0xff14,0xff22,
0xff30,0xff3d,0xff49,0xff55,0xff61,0xff6c,0xff77,0xff81,
0xff8b,0xff95,0xff9e,0xffa7,0xffaf,0xffb7,0xffbf,0xffc6,
0xffcd,0xffd3,0xffd9,0xffde,0xffe3,0xffe8,0xffec,0xfff0,
0xfff3,0xfff6,0xfff9,0xfffb,0xfffc,0xfffe,0xffff,0xffff,
0xffff,0xffff,0xfffe,0xfffc,0xfffb,0xfff9,0xfff6,0xfff3,
0xfff0,0xffec,0xffe8,0xffe3,0xffde,0xffd9,0xffd3,0xffcd,
0xffc6,0xffbf,0xffb7,0xffaf,0xffa7,0xff9e,0xff95,0xff8b,
0xff81,0xff77,0xff6c,0xff61,0xff55,0xff49,0xff3d,0xff30,
0xff22,0xff14,0xff06,0xfef8,0xfee9,0xfed9,0xfec9,0xfeb9,
0xfea8,0xfe97,0xfe86,0xfe74,0xfe61,0xfe4f,0xfe3c,0xfe28,
0xfe14,0xfe00,0xfdeb,0xfdd5,0xfdc0,0xfdaa,0xfd93,0xfd7c,
0xfd65,0xfd4d,0xfd35,0xfd1d,0xfd04,0xfceb,0xfcd1,0xfcb7,
0xfc9c,0xfc81,0xfc66,0xfc4a,0xfc2e,0xfc11,0xfbf4,0xfbd7,
0xfbb9,0xfb9b,0xfb7c,0xfb5d,0xfb3e,0xfb1e,0xfafe,0xfadd,
0xfabc,0xfa9b,0xfa79,0xfa57,0xfa34,0xfa11,0xf9ee,0xf9ca,
0xf9a5,0xf981,0xf95c,0xf936,0xf911,0xf8ea,0xf8c4,0xf89d,
0xf875,0xf84e,0xf825,0xf7fd,0xf7d4,0xf7aa,0xf781,0xf757,
0xf72c,0xf701,0xf6d6,0xf6aa,0xf67e,0xf652,0xf625,0xf5f7,
0xf5ca,0xf59c,0xf56d,0xf53f,0xf50f,0xf4e0,0xf4b0,0xf480,
0xf44f,0xf41e,0xf3ec,0xf3ba,0xf388,0xf356,0xf323,0xf2ef,
0xf2bc,0xf287,0xf253,0xf21e,0xf1e9,0xf1b3,0xf17d,0xf147,
0xf110,0xf0d9,0xf0a2,0xf06a,0xf032,0xeff9,0xefc0,0xef87,
0xef4d,0xef13,0xeed9,0xee9e,0xee63,0xee28,0xedec,0xedb0,
0xed73,0xed36,0xecf9,0xecbb,0xec7d,0xec3f,0xec00,0xebc1,
0xeb82,0xeb42,0xeb02,0xeac2,0xea81,0xea40,0xe9fe,0xe9bd,
0xe97a,0xe938,0xe8f5,0xe8b2,0xe86e,0xe82a,0xe7e6,0xe7a2,
0xe75d,0xe717,0xe6d2,0xe68c,0xe646,0xe5ff,0xe5b8,0xe571,
0xe529,0xe4e1,0xe499,0xe451,0xe408,0xe3be,0xe375,0xe32b,
0xe2e1,0xe296,0xe24b,0xe200,0xe1b5,0xe169,0xe11d,0xe0d0,
0xe084,0xe037,0xdfe9,0xdf9b,0xdf4d,0xdeff,0xdeb0,0xde62,
0xde12,0xddc3,0xdd73,0xdd23,0xdcd2,0xdc81,0xdc30,0xdbdf,
0xdb8d,0xdb3b,0xdae9,0xda96,0xda43,0xd9f0,0xd99d,0xd949,
0xd8f5,0xd8a1,0xd84c,0xd7f7,0xd7a2,0xd74c,0xd6f7,0xd6a0,
0xd64a,0xd5f3,0xd59d,0xd545,0xd4ee,0xd496,0xd43e,0xd3e6,
0xd38d,0xd334,0xd2db,0xd282,0xd228,0xd1ce,0xd174,0xd11a,
0xd0bf,0xd064,0xd009,0xcfad,0xcf51,0xcef5,0xce99,0xce3c,
0xcddf,0xcd82,0xcd25,0xccc8,0xcc6a,0xcc0c,0xcbad,0xcb4f,
0xcaf0,0xca91,0xca32,0xc9d2,0xc972,0xc912,0xc8b2,0xc851,
0xc7f1,0xc790,0xc72e,0xc6cd,0xc66b,0xc609,0xc5a7,0xc545,
0xc4e2,0xc47f,0xc41c,0xc3b9,0xc356,0xc2f2,0xc28e,0xc22a,
0xc1c6,0xc161,0xc0fc,0xc097,0xc032,0xbfcd,0xbf67,0xbf01,
0xbe9b,0xbe35,0xbdce,0xbd68,0xbd01,0xbc9a,0xbc32,0xbbcb,
0xbb63,0xbafc,0xba94,0xba2b,0xb9c3,0xb95a,0xb8f1,0xb888,
0xb81f,0xb7b6,0xb74c,0xb6e3,0xb679,0xb60f,0xb5a5,0xb53a,
0xb4d0,0xb465,0xb3fa,0xb38f,0xb323,0xb2b8,0xb24c,0xb1e1,
0xb175,0xb109,0xb09c,0xb030,0xafc3,0xaf57,0xaeea,0xae7d,
0xae10,0xada2,0xad35,0xacc7,0xac59,0xabeb,0xab7d,0xab0f,
0xaaa1,0xaa32,0xa9c4,0xa955,0xa8e6,0xa877,0xa808,0xa798,
0xa729,0xa6b9,0xa64a,0xa5da,0xa56a,0xa4fa,0xa48a,0xa419,
0xa3a9,0xa338,0xa2c8,0xa257,0xa1e6,0xa175,0xa104,0xa093,
0xa022,0x9fb0,0x9f3f,0x9ecd,0x9e5b,0x9de9,0x9d78,0x9d06,
0x9c93,0x9c21,0x9baf,0x9b3d,0x9aca,0x9a57,0x99e5,0x9972,
0x98ff,0x988c,0x9819,0x97a6,0x9733,0x96c0,0x964d,0x95d9,
0x9566,0x94f2,0x947f,0x940b,0x9398,0x9324,0x92b0,0x923c,
0x91c8,0x9154,0x90e0,0x906c,0x8ff8,0x8f84,0x8f0f,0x8e9b,
0x8e27,0x8db2,0x8d3e,0x8cc9,0x8c55,0x8be0,0x8b6b,0x8af7,
0x8a82,0x8a0d,0x8999,0x8924,0x88af,0x883a,0x87c5,0x8750,
0x86db,0x8666,0x85f1,0x857c,0x8507,0x8492,0x841d,0x83a8,
0x8333,0x82be,0x8249,0x81d4,0x815f,0x80ea,0x8075,0x8000,
0x7f8a,0x7f15,0x7ea0,0x7e2b,0x7db6,0x7d41,0x7ccc,0x7c57,
0x7be2,0x7b6d,0x7af8,0x7a83,0x7a0e,0x7999,0x7924,0x78af,
0x783a,0x77c5,0x7750,0x76db,0x7666,0x75f2,0x757d,0x7508,
0x7494,0x741f,0x73aa,0x7336,0x72c1,0x724d,0x71d8,0x7164,
0x70f0,0x707b,0x7007,0x6f93,0x6f1f,0x6eab,0x6e37,0x6dc3,
0x6d4f,0x6cdb,0x6c67,0x6bf4,0x6b80,0x6b0d,0x6a99,0x6a26,
0x69b2,0x693f,0x68cc,0x6859,0x67e6,0x6773,0x6700,0x668d,
0x661a,0x65a8,0x6535,0x64c2,0x6450,0x63de,0x636c,0x62f9,
0x6287,0x6216,0x61a4,0x6132,0x60c0,0x604f,0x5fdd,0x5f6c,
0x5efb,0x5e8a,0x5e19,0x5da8,0x5d37,0x5cc7,0x5c56,0x5be6,
0x5b75,0x5b05,0x5a95,0x5a25,0x59b5,0x5946,0x58d6,0x5867,
0x57f7,0x5788,0x5719,0x56aa,0x563b,0x55cd,0x555e,0x54f0,
0x5482,0x5414,0x53a6,0x5338,0x52ca,0x525d,0x51ef,0x5182,
0x5115,0x50a8,0x503c,0x4fcf,0x4f63,0x4ef6,0x4e8a,0x4e1e,
0x4db3,0x4d47,0x4cdc,0x4c70,0x4c05,0x4b9a,0x4b2f,0x4ac5,
0x4a5a,0x49f0,0x4986,0x491c,0x48b3,0x4849,0x47e0,0x4777,
0x470e,0x46a5,0x463c,0x45d4,0x456b,0x4503,0x449c,0x4434,
0x43cd,0x4365,0x42fe,0x4297,0x4231,0x41ca,0x4164,0x40fe,
0x4098,0x4032,0x3fcd,0x3f68,0x3f03,0x3e9e,0x3e39,0x3dd5,
0x3d71,0x3d0d,0x3ca9,0x3c46,0x3be3,0x3b80,0x3b1d,0x3aba,
0x3a58,0x39f6,0x3994,0x3932,0x38d1,0x386f,0x380e,0x37ae,
0x374d,0x36ed,0x368d,0x362d,0x35cd,0x356e,0x350f,0x34b0,
0x3452,0x33f3,0x3395,0x3337,0x32da,0x327d,0x3220,0x31c3,
0x3166,0x310a,0x30ae,0x3052,0x2ff6,0x2f9b,0x2f40,0x2ee5,
0x2e8b,0x2e31,0x2dd7,0x2d7d,0x2d24,0x2ccb,0x2c72,0x2c19,
0x2bc1,0x2b69,0x2b11,0x2aba,0x2a62,0x2a0c,0x29b5,0x295f,
0x2908,0x28b3,0x285d,0x2808,0x27b3,0x275e,0x270a,0x26b6,
0x2662,0x260f,0x25bc,0x2569,0x2516,0x24c4,0x2472,0x2420,
0x23cf,0x237e,0x232d,0x22dc,0x228c,0x223c,0x21ed,0x219d,
0x214f,0x2100,0x20b2,0x2064,0x2016,0x1fc8,0x1f7b,0x1f2f,
0x1ee2,0x1e96,0x1e4a,0x1dff,0x1db4,0x1d69,0x1d1e,0x1cd4,
0x1c8a,0x1c41,0x1bf7,0x1bae,0x1b66,0x1b1e,0x1ad6,0x1a8e,
0x1a47,0x1a00,0x19b9,0x1973,0x192d,0x18e8,0x18a2,0x185d,
0x1819,0x17d5,0x1791,0x174d,0x170a,0x16c7,0x1685,0x1642,
0x1601,0x15bf,0x157e,0x153d,0x14fd,0x14bd,0x147d,0x143e,
0x13ff,0x13c0,0x1382,0x1344,0x1306,0x12c9,0x128c,0x124f,
0x1213,0x11d7,0x119c,0x1161,0x1126,0x10ec,0x10b2,0x1078,
0x103f,0x1006,0xfcd,0xf95,0xf5d,0xf26,0xeef,0xeb8,
0xe82,0xe4c,0xe16,0xde1,0xdac,0xd78,0xd43,0xd10,
0xcdc,0xca9,0xc77,0xc45,0xc13,0xbe1,0xbb0,0xb7f,
0xb4f,0xb1f,0xaf0,0xac0,0xa92,0xa63,0xa35,0xa08,
0x9da,0x9ad,0x981,0x955,0x929,0x8fe,0x8d3,0x8a8,
0x87e,0x855,0x82b,0x802,0x7da,0x7b1,0x78a,0x762,
0x73b,0x715,0x6ee,0x6c9,0x6a3,0x67e,0x65a,0x635,
0x611,0x5ee,0x5cb,0x5a8,0x586,0x564,0x543,0x522,
0x501,0x4e1,0x4c1,0x4a2,0x483,0x464,0x446,0x428,
0x40b,0x3ee,0x3d1,0x3b5,0x399,0x37e,0x363,0x348,
0x32e,0x314,0x2fb,0x2e2,0x2ca,0x2b2,0x29a,0x283,
0x26c,0x255,0x23f,0x22a,0x214,0x1ff,0x1eb,0x1d7,
0x1c3,0x1b0,0x19e,0x18b,0x179,0x168,0x157,0x146,
0x136,0x126,0x116,0x107,0xf9,0xeb,0xdd,0xcf,
0xc2,0xb6,0xaa,0x9e,0x93,0x88,0x7e,0x74,
0x6a,0x61,0x58,0x50,0x48,0x40,0x39,0x32,
0x2c,0x26,0x21,0x1c,0x17,0x13,0xf,0xc,
0x9,0x6,0x4,0x3,0x1,0x0,0x0,0x0,
0x0,0x1,0x3,0x4,0x6,0x9,0xc,0xf,
0x13,0x17,0x1c,0x21,0x26,0x2c,0x32,0x39,
0x40,0x48,0x50,0x58,0x61,0x6a,0x74,0x7e,
0x88,0x93,0x9e,0xaa,0xb6,0xc2,0xcf,0xdd,
0xeb,0xf9,0x107,0x116,0x126,0x136,0x146,0x157,
0x168,0x179,0x18b,0x19e,0x1b0,0x1c3,0x1d7,0x1eb,
0x1ff,0x214,0x22a,0x23f,0x255,0x26c,0x283,0x29a,
0x2b2,0x2ca,0x2e2,0x2fb,0x314,0x32e,0x348,0x363,
0x37e,0x399,0x3b5,0x3d1,0x3ee,0x40b,0x428,0x446,
0x464,0x483,0x4a2,0x4c1,0x4e1,0x501,0x522,0x543,
0x564,0x586,0x5a8,0x5cb,0x5ee,0x611,0x635,0x65a,
0x67e,0x6a3,0x6c9,0x6ee,0x715,0x73b,0x762,0x78a,
0x7b1,0x7da,0x802,0x82b,0x855,0x87e,0x8a8,0x8d3,
0x8fe,0x929,0x955,0x981,0x9ad,0x9da,0xa08,0xa35,
0xa63,0xa92,0xac0,0xaf0,0xb1f,0xb4f,0xb7f,0xbb0,
0xbe1,0xc13,0xc45,0xc77,0xca9,0xcdc,0xd10,0xd43,
0xd78,0xdac,0xde1,0xe16,0xe4c,0xe82,0xeb8,0xeef,
0xf26,0xf5d,0xf95,0xfcd,0x1006,0x103f,0x1078,0x10b2,
0x10ec,0x1126,0x1161,0x119c,0x11d7,0x1213,0x124f,0x128c,
0x12c9,0x1306,0x1344,0x1382,0x13c0,0x13ff,0x143e,0x147d,
0x14bd,0x14fd,0x153d,0x157e,0x15bf,0x1601,0x1642,0x1685,
0x16c7,0x170a,0x174d,0x1791,0x17d5,0x1819,0x185d,0x18a2,
0x18e8,0x192d,0x1973,0x19b9,0x1a00,0x1a47,0x1a8e,0x1ad6,
0x1b1e,0x1b66,0x1bae,0x1bf7,0x1c41,0x1c8a,0x1cd4,0x1d1e,
0x1d69,0x1db4,0x1dff,0x1e4a,0x1e96,0x1ee2,0x1f2f,0x1f7b,
0x1fc8,0x2016,0x2064,0x20b2,0x2100,0x214f,0x219d,0x21ed,
0x223c,0x228c,0x22dc,0x232d,0x237e,0x23cf,0x2420,0x2472,
0x24c4,0x2516,0x2569,0x25bc,0x260f,0x2662,0x26b6,0x270a,
0x275e,0x27b3,0x2808,0x285d,0x28b3,0x2908,0x295f,0x29b5,
0x2a0c,0x2a62,0x2aba,0x2b11,0x2b69,0x2bc1,0x2c19,0x2c72,
0x2ccb,0x2d24,0x2d7d,0x2dd7,0x2e31,0x2e8b,0x2ee5,0x2f40,
0x2f9b,0x2ff6,0x3052,0x30ae,0x310a,0x3166,0x31c3,0x3220,
0x327d,0x32da,0x3337,0x3395,0x33f3,0x3452,0x34b0,0x350f,
0x356e,0x35cd,0x362d,0x368d,0x36ed,0x374d,0x37ae,0x380e,
0x386f,0x38d1,0x3932,0x3994,0x39f6,0x3a58,0x3aba,0x3b1d,
0x3b80,0x3be3,0x3c46,0x3ca9,0x3d0d,0x3d71,0x3dd5,0x3e39,
0x3e9e,0x3f03,0x3f68,0x3fcd,0x4032,0x4098,0x40fe,0x4164,
0x41ca,0x4231,0x4297,0x42fe,0x4365,0x43cd,0x4434,0x449c,
0x4503,0x456b,0x45d4,0x463c,0x46a5,0x470e,0x4777,0x47e0,
0x4849,0x48b3,0x491c,0x4986,0x49f0,0x4a5a,0x4ac5,0x4b2f,
0x4b9a,0x4c05,0x4c70,0x4cdc,0x4d47,0x4db3,0x4e1e,0x4e8a,
0x4ef6,0x4f63,0x4fcf,0x503c,0x50a8,0x5115,0x5182,0x51ef,
0x525d,0x52ca,0x5338,0x53a6,0x5414,0x5482,0x54f0,0x555e,
0x55cd,0x563b,0x56aa,0x5719,0x5788,0x57f7,0x5867,0x58d6,
0x5946,0x59b5,0x5a25,0x5a95,0x5b05,0x5b75,0x5be6,0x5c56,
0x5cc7,0x5d37,0x5da8,0x5e19,0x5e8a,0x5efb,0x5f6c,0x5fdd,
0x604f,0x60c0,0x6132,0x61a4,0x6216,0x6287,0x62f9,0x636c,
0x63de,0x6450,0x64c2,0x6535,0x65a8,0x661a,0x668d,0x6700,
0x6773,0x67e6,0x6859,0x68cc,0x693f,0x69b2,0x6a26,0x6a99,
0x6b0d,0x6b80,0x6bf4,0x6c67,0x6cdb,0x6d4f,0x6dc3,0x6e37,
0x6eab,0x6f1f,0x6f93,0x7007,0x707b,0x70f0,0x7164,0x71d8,
0x724d,0x72c1,0x7336,0x73aa,0x741f,0x7494,0x7508,0x757d,
0x75f2,0x7666,0x76db,0x7750,0x77c5,0x783a,0x78af,0x7924,
0x7999,0x7a0e,0x7a83,0x7af8,0x7b6d,0x7be2,0x7c57,0x7ccc,
0x7d41,0x7db6,0x7e2b,0x7ea0,0x7f15,0x7f8a,0x8000,
};*/
  const unsigned int SINE_TABLE[] = { 
    0x800,0x80c,0x819,0x825,0x832,0x83e,0x84b,0x857,
0x864,0x871,0x87d,0x88a,0x896,0x8a3,0x8af,0x8bc,
0x8c8,0x8d5,0x8e1,0x8ee,0x8fa,0x907,0x913,0x91f,
0x92c,0x938,0x945,0x951,0x95e,0x96a,0x976,0x983,
0x98f,0x99b,0x9a8,0x9b4,0x9c0,0x9cc,0x9d9,0x9e5,
0x9f1,0x9fd,0xa09,0xa15,0xa22,0xa2e,0xa3a,0xa46,
0xa52,0xa5e,0xa6a,0xa76,0xa82,0xa8e,0xa9a,0xaa5,
0xab1,0xabd,0xac9,0xad5,0xae0,0xaec,0xaf8,0xb03,
0xb0f,0xb1b,0xb26,0xb32,0xb3d,0xb49,0xb54,0xb60,
0xb6b,0xb76,0xb82,0xb8d,0xb98,0xba3,0xbae,0xbba,
0xbc5,0xbd0,0xbdb,0xbe6,0xbf1,0xbfc,0xc06,0xc11,
0xc1c,0xc27,0xc32,0xc3c,0xc47,0xc52,0xc5c,0xc67,
0xc71,0xc7b,0xc86,0xc90,0xc9a,0xca5,0xcaf,0xcb9,
0xcc3,0xccd,0xcd7,0xce1,0xceb,0xcf5,0xcff,0xd09,
0xd12,0xd1c,0xd26,0xd2f,0xd39,0xd42,0xd4c,0xd55,
0xd5f,0xd68,0xd71,0xd7a,0xd83,0xd8c,0xd95,0xd9e,
0xda7,0xdb0,0xdb9,0xdc2,0xdca,0xdd3,0xddc,0xde4,
0xded,0xdf5,0xdfd,0xe06,0xe0e,0xe16,0xe1e,0xe26,
0xe2e,0xe36,0xe3e,0xe46,0xe4e,0xe55,0xe5d,0xe65,
0xe6c,0xe74,0xe7b,0xe82,0xe8a,0xe91,0xe98,0xe9f,
0xea6,0xead,0xeb4,0xebb,0xec1,0xec8,0xecf,0xed5,
0xedc,0xee2,0xee8,0xeef,0xef5,0xefb,0xf01,0xf07,
0xf0d,0xf13,0xf19,0xf1f,0xf24,0xf2a,0xf30,0xf35,
0xf3a,0xf40,0xf45,0xf4a,0xf4f,0xf54,0xf59,0xf5e,
0xf63,0xf68,0xf6d,0xf71,0xf76,0xf7a,0xf7f,0xf83,
0xf87,0xf8c,0xf90,0xf94,0xf98,0xf9c,0xf9f,0xfa3,
0xfa7,0xfaa,0xfae,0xfb1,0xfb5,0xfb8,0xfbb,0xfbf,
0xfc2,0xfc5,0xfc8,0xfca,0xfcd,0xfd0,0xfd3,0xfd5,
0xfd8,0xfda,0xfdc,0xfdf,0xfe1,0xfe3,0xfe5,0xfe7,
0xfe9,0xfeb,0xfec,0xfee,0xff0,0xff1,0xff3,0xff4,
0xff5,0xff6,0xff7,0xff8,0xff9,0xffa,0xffb,0xffc,
0xffd,0xffd,0xffe,0xffe,0xffe,0xfff,0xfff,0xfff,
0xfff,0xfff,0xfff,0xfff,0xffe,0xffe,0xffe,0xffd,
0xffd,0xffc,0xffb,0xffa,0xff9,0xff8,0xff7,0xff6,
0xff5,0xff4,0xff3,0xff1,0xff0,0xfee,0xfec,0xfeb,
0xfe9,0xfe7,0xfe5,0xfe3,0xfe1,0xfdf,0xfdc,0xfda,
0xfd8,0xfd5,0xfd3,0xfd0,0xfcd,0xfca,0xfc8,0xfc5,
0xfc2,0xfbf,0xfbb,0xfb8,0xfb5,0xfb1,0xfae,0xfaa,
0xfa7,0xfa3,0xf9f,0xf9c,0xf98,0xf94,0xf90,0xf8c,
0xf87,0xf83,0xf7f,0xf7a,0xf76,0xf71,0xf6d,0xf68,
0xf63,0xf5e,0xf59,0xf54,0xf4f,0xf4a,0xf45,0xf40,
0xf3a,0xf35,0xf30,0xf2a,0xf24,0xf1f,0xf19,0xf13,
0xf0d,0xf07,0xf01,0xefb,0xef5,0xeef,0xee8,0xee2,
0xedc,0xed5,0xecf,0xec8,0xec1,0xebb,0xeb4,0xead,
0xea6,0xe9f,0xe98,0xe91,0xe8a,0xe82,0xe7b,0xe74,
0xe6c,0xe65,0xe5d,0xe55,0xe4e,0xe46,0xe3e,0xe36,
0xe2e,0xe26,0xe1e,0xe16,0xe0e,0xe06,0xdfd,0xdf5,
0xded,0xde4,0xddc,0xdd3,0xdca,0xdc2,0xdb9,0xdb0,
0xda7,0xd9e,0xd95,0xd8c,0xd83,0xd7a,0xd71,0xd68,
0xd5f,0xd55,0xd4c,0xd42,0xd39,0xd2f,0xd26,0xd1c,
0xd12,0xd09,0xcff,0xcf5,0xceb,0xce1,0xcd7,0xccd,
0xcc3,0xcb9,0xcaf,0xca5,0xc9a,0xc90,0xc86,0xc7b,
0xc71,0xc67,0xc5c,0xc52,0xc47,0xc3c,0xc32,0xc27,
0xc1c,0xc11,0xc06,0xbfc,0xbf1,0xbe6,0xbdb,0xbd0,
0xbc5,0xbba,0xbae,0xba3,0xb98,0xb8d,0xb82,0xb76,
0xb6b,0xb60,0xb54,0xb49,0xb3d,0xb32,0xb26,0xb1b,
0xb0f,0xb03,0xaf8,0xaec,0xae0,0xad5,0xac9,0xabd,
0xab1,0xaa5,0xa9a,0xa8e,0xa82,0xa76,0xa6a,0xa5e,
0xa52,0xa46,0xa3a,0xa2e,0xa22,0xa15,0xa09,0x9fd,
0x9f1,0x9e5,0x9d9,0x9cc,0x9c0,0x9b4,0x9a8,0x99b,
0x98f,0x983,0x976,0x96a,0x95e,0x951,0x945,0x938,
0x92c,0x91f,0x913,0x907,0x8fa,0x8ee,0x8e1,0x8d5,
0x8c8,0x8bc,0x8af,0x8a3,0x896,0x88a,0x87d,0x871,
0x864,0x857,0x84b,0x83e,0x832,0x825,0x819,0x80c,
0x800,0x7f3,0x7e6,0x7da,0x7cd,0x7c1,0x7b4,0x7a8,
0x79b,0x78e,0x782,0x775,0x769,0x75c,0x750,0x743,
0x737,0x72a,0x71e,0x711,0x705,0x6f8,0x6ec,0x6e0,
0x6d3,0x6c7,0x6ba,0x6ae,0x6a1,0x695,0x689,0x67c,
0x670,0x664,0x657,0x64b,0x63f,0x633,0x626,0x61a,
0x60e,0x602,0x5f6,0x5ea,0x5dd,0x5d1,0x5c5,0x5b9,
0x5ad,0x5a1,0x595,0x589,0x57d,0x571,0x565,0x55a,
0x54e,0x542,0x536,0x52a,0x51f,0x513,0x507,0x4fc,
0x4f0,0x4e4,0x4d9,0x4cd,0x4c2,0x4b6,0x4ab,0x49f,
0x494,0x489,0x47d,0x472,0x467,0x45c,0x451,0x445,
0x43a,0x42f,0x424,0x419,0x40e,0x403,0x3f9,0x3ee,
0x3e3,0x3d8,0x3cd,0x3c3,0x3b8,0x3ad,0x3a3,0x398,
0x38e,0x384,0x379,0x36f,0x365,0x35a,0x350,0x346,
0x33c,0x332,0x328,0x31e,0x314,0x30a,0x300,0x2f6,
0x2ed,0x2e3,0x2d9,0x2d0,0x2c6,0x2bd,0x2b3,0x2aa,
0x2a0,0x297,0x28e,0x285,0x27c,0x273,0x26a,0x261,
0x258,0x24f,0x246,0x23d,0x235,0x22c,0x223,0x21b,
0x212,0x20a,0x202,0x1f9,0x1f1,0x1e9,0x1e1,0x1d9,
0x1d1,0x1c9,0x1c1,0x1b9,0x1b1,0x1aa,0x1a2,0x19a,
0x193,0x18b,0x184,0x17d,0x175,0x16e,0x167,0x160,
0x159,0x152,0x14b,0x144,0x13e,0x137,0x130,0x12a,
0x123,0x11d,0x117,0x110,0x10a,0x104,0xfe,0xf8,
0xf2,0xec,0xe6,0xe0,0xdb,0xd5,0xcf,0xca,
0xc5,0xbf,0xba,0xb5,0xb0,0xab,0xa6,0xa1,
0x9c,0x97,0x92,0x8e,0x89,0x85,0x80,0x7c,
0x78,0x73,0x6f,0x6b,0x67,0x63,0x60,0x5c,
0x58,0x55,0x51,0x4e,0x4a,0x47,0x44,0x40,
0x3d,0x3a,0x37,0x35,0x32,0x2f,0x2c,0x2a,
0x27,0x25,0x23,0x20,0x1e,0x1c,0x1a,0x18,
0x16,0x14,0x13,0x11,0xf,0xe,0xc,0xb,
0xa,0x9,0x8,0x7,0x6,0x5,0x4,0x3,
0x2,0x2,0x1,0x1,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x1,0x1,0x2,
0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,
0xa,0xb,0xc,0xe,0xf,0x11,0x13,0x14,
0x16,0x18,0x1a,0x1c,0x1e,0x20,0x23,0x25,
0x27,0x2a,0x2c,0x2f,0x32,0x35,0x37,0x3a,
0x3d,0x40,0x44,0x47,0x4a,0x4e,0x51,0x55,
0x58,0x5c,0x60,0x63,0x67,0x6b,0x6f,0x73,
0x78,0x7c,0x80,0x85,0x89,0x8e,0x92,0x97,
0x9c,0xa1,0xa6,0xab,0xb0,0xb5,0xba,0xbf,
0xc5,0xca,0xcf,0xd5,0xdb,0xe0,0xe6,0xec,
0xf2,0xf8,0xfe,0x104,0x10a,0x110,0x117,0x11d,
0x123,0x12a,0x130,0x137,0x13e,0x144,0x14b,0x152,
0x159,0x160,0x167,0x16e,0x175,0x17d,0x184,0x18b,
0x193,0x19a,0x1a2,0x1aa,0x1b1,0x1b9,0x1c1,0x1c9,
0x1d1,0x1d9,0x1e1,0x1e9,0x1f1,0x1f9,0x202,0x20a,
0x212,0x21b,0x223,0x22c,0x235,0x23d,0x246,0x24f,
0x258,0x261,0x26a,0x273,0x27c,0x285,0x28e,0x297,
0x2a0,0x2aa,0x2b3,0x2bd,0x2c6,0x2d0,0x2d9,0x2e3,
0x2ed,0x2f6,0x300,0x30a,0x314,0x31e,0x328,0x332,
0x33c,0x346,0x350,0x35a,0x365,0x36f,0x379,0x384,
0x38e,0x398,0x3a3,0x3ad,0x3b8,0x3c3,0x3cd,0x3d8,
0x3e3,0x3ee,0x3f9,0x403,0x40e,0x419,0x424,0x42f,
0x43a,0x445,0x451,0x45c,0x467,0x472,0x47d,0x489,
0x494,0x49f,0x4ab,0x4b6,0x4c2,0x4cd,0x4d9,0x4e4,
0x4f0,0x4fc,0x507,0x513,0x51f,0x52a,0x536,0x542,
0x54e,0x55a,0x565,0x571,0x57d,0x589,0x595,0x5a1,
0x5ad,0x5b9,0x5c5,0x5d1,0x5dd,0x5ea,0x5f6,0x602,
0x60e,0x61a,0x626,0x633,0x63f,0x64b,0x657,0x664,
0x670,0x67c,0x689,0x695,0x6a1,0x6ae,0x6ba,0x6c7,
0x6d3,0x6e0,0x6ec,0x6f8,0x705,0x711,0x71e,0x72a,
0x737,0x743,0x750,0x75c,0x769,0x775,0x782,0x78e,
0x79b,0x7a8,0x7b4,0x7c1,0x7cd,0x7da,0x7e6,0x7f3,};

const unsigned int *table_ptr = &SINE_TABLE[0];
lng temporary_long; 
/* USER CODE END 0 */

/* USER CODE BEGIN 1 */  
volatile char x ;

void generate_Sinus(char Amplitude, char Frequency)
{
  x=sizeof (int);
  phase_add = Frequency * PHASE_PRECISION / SAMPLE_RATE_DAC;
  
 // Sine();
  
  static unsigned phase_acc = 0;  // holds phase accumulator
  
//  int16_t TEMP_DAC_Value;                      // the temporary value that passes 
                                 // through 3 stages before being written 
                                 // to DAC1
//  int32_t *table_ptr;            // pointer to the lookup table
//  lng temporary_long;             // holds the result of a 16-bit multiply
//  T4CON &= ~0x80;                 // clear T4 overflow flag
//  table_ptr =&SINE_TABLE[0];         
  
  phase_acc += phase_add;         // increment phase accumulator 
  
//  set the value of <TEMP_DAC_Value> to the next output of DAC1 at full-scale
//  amplitude; the  rails are +32767, -32768 
  
//   // read the table value
//  table_ptr = table_ptr+phase_add;
//  TEMP_DAC_Value = *table_ptr;
//  if(table_ptr >=(&SINE_TABLE[1759]))
//  {
//    table_ptr=table_ptr-1759;
//  }

  TEMP_DAC_Value = SINE_TABLE[Sine_index];
  Sine_index=Sine_index+phase_add;
  if(Sine_index>=1024)
  {
    Sine_index=Sine_index-1024;
  }
  
  //TEMP_DAC_Value = ((TEMP_DAC_Value+32768)>>4);     
  //TEMP_DAC_Value = TEMP_DAC_Value>>4;
 
  TEMP_DAC_Value =  TEMP_DAC_Value / Amplitude;

   //SPIData_Frame.ui12Data = TEMP_DAC_Value;
 }
 
void generate_Sinus1(char Amplitude, char Frequency)
{
  phase_add = Frequency * PHASE_PRECISION / SAMPLE_RATE_DAC;
//  Sine();
  static unsigned phase_acc = 0;  // holds phase accumulator
//  int16_t TEMP_DAC_Value;                      // the temporary value that passes 
                               // through 3 stages before being written 
                               // to DAC1
//  int32_t *table_ptr;            // pointer to the lookup table
//  lng temporary_long;             // holds the result of a 16-bit multiply
//  T4CON &= ~0x80;                 // clear T4 overflow flag
//  table_ptr =&SINE_TABLE[0];   
   
  phase_acc += phase_add;         // increment phase accumulator 
  
//  set the value of <TEMP_DAC_Value> to the next output of DAC1 at full-scale
//  amplitude; the  rails are +32767, -32768 
  
//  // read the table value
//  table_ptr = table_ptr+phase_add;
//  TEMP_DAC_Value = *table_ptr;
//  if(table_ptr >=(&SINE_TABLE[1759]))
//  {
//  table_ptr=table_ptr-1759;
//  }
        

  DAC2_Value = SINE_TABLE[Sine_index];
  Sine_index=Sine_index+phase_add;
  if(Sine_index>=1024)
  {
    Sine_index=Sine_index-1024;
  }
         //TEMP_DAC_Value = ((TEMP_DAC_Value+32768)>>4); 
  
//  phase_add = frequency * PHASE_PRECISION / SAMPLE_RATE_DAC;
//  
//
//  //static unsigned phase_acc = 0;
// // phase_acc += phase_add;
//  //unsigned i;  //nr incrementari
//  //for(i=0; i<20; i++)
//  
//  table_ptr = table_ptr+phase_add;
//  TEMP_DAC_Value = *table_ptr;
//  //}
//  
// TEMP_DAC_Value = (0x8000 ^ TEMP_DAC_Value)>>4;
// 
//  if(table_ptr >=(&SINE_TABLE[255]))
//        {
//          table_ptr=table_ptr-0x00FF;
//        }
//   
//  

//  Adjust the Gain
//  temporary_long.Long = (long) ((long)DAC2_Value * (long)amplitude); 
//  DAC2_Value = temporary_long.Int[0];  // same as temporary_long >> 16
//  Add a DC bias to make the rails 0 to 65535
//  Note: the XOR with 0x8000 translates the bipolar quantity into 
//  a unipolar quantity.
//  DAC1 = 0x8000 ^ TEMP_DAC_Value;
//  TEMP_DAC_Value = (0x8000 ^ TEMP_DAC_Value)>>4;
  
  DAC2_Value = DAC2_Value>>4;
  
//  SPIData_Frame.ui12Data = TEMP_DAC_Value;
 }
